# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
  - main

variables:
  - group: CommonBuildVariables
  - name: artifactVersion
    value: $(Build.BuildId)
  - name: buildFor
    value: 'nonprod'
  - name: runSonar
    value: true
  - name: MAVEN_CACHE_FOLDER
    value: $(Pipeline.Workspace)/.m2/repository
  - name: MAVEN_OPTS
    value: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'
  - name: SONAR_USER_HOME
    value: $(Build.Repository.LocalPath)
  - ${{ if eq(variables['Build.SourceBranchName'], 'main') }}:
      - name: buildFor
        value: 'prod'
  - ${{ if ne(variables['Build.SourceBranchName'], 'main') }}:
      - name: buildFor
        value: 'nonprod'
      - name: runSonar
        value: false

pool:
  vmImage: 'ubuntu-latest'


resources:
  repositories:
    - repository: BDTemplateRepo #repository name can be different
      type: git
      name: Engineering Enablement/template-blackduck
      ref: refs/heads/master
    - repository: PolarisTemplateRepo # name needs to stay the same!
      type: git
      name: Engineering Enablement/templates
      ref: refs/heads/master # use master branch as default




stages:
  - stage: Build
    displayName: Build and Push the artifact
    jobs:
      - job: Build
        displayName: Code and Image Build


        steps:
          - task: MavenAuthenticate@0
            displayName: 'Maven Authenticate'
            inputs:
              artifactsFeeds: 'athena-feed'
              mavenServiceConnections: 'athena-feed-sn'
          - checkout: self
            persistCredentials: true
            clean: true
          - task: Cache@2
            inputs:
              key: 'maven | "$(Agent.OS)" | **/pom.xml'
              restoreKeys: |
                maven | "$(Agent.OS)"
                maven
              path: $(MAVEN_CACHE_FOLDER)
            displayName: Cache Maven local repo

          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                echo "Using version: $(artifactVersion)"
                echo "Build for : $(buildFor)"
          - task: Maven@3
            inputs:
              mavenPomFile: 'pom.xml'
              mavenOptions: '-Xmx3072m $(MAVEN_OPTS)'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '1.17'
              jdkArchitectureOption: 'x64'
              publishJUnitResults: true
              sqMavenPluginVersionChoice: latest
              testResultsFiles: '**/surefire-reports/TEST-*.xml'
              goals: 'deploy'
          - task: CopyFiles@2
            displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
            inputs:
              SourceFolder: '$(system.defaultworkingdirectory)'
              Contents: '**/*.jar'
              TargetFolder: '$(build.artifactstagingdirectory)'
            condition: succeeded()

          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact: drop'
            inputs:
              PathtoPublish: '$(build.artifactstagingdirectory)'
              ArtifactName: 'drop'
            condition: succeeded()

          - task: Bash@3
            displayName: Log Build is done
            inputs:
              targetType: 'inline'
              script:
                echo "Maven Build success"
